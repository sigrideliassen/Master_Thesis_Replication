# Dette er noen pakker du må sørge for at du har i R: 
# Du kan trykke på "Packages" og huke av for "zoo" og "dply" 
library(data.table)
library(zoo)
library(dplyr)
  
# Import CRSP data 
# Jeg trykker bare på "Import data" i stedet for å kode innhentingen (også lime inn i koden så du har den liggende til neste gang du kjører)
library(readxl)
NYSE = as.data.table(read_excel("Documents/Master/Master Thesis/Data_CRSP_Compustat/NYSE_data.xlsx"))
AMEX = as.data.table(read_excel("Documents/Master/Master Thesis/Data_CRSP_Compustat/AMEX_data.xlsx"))
NASDAQ = as.data.table(read_excel("Documents/Master/Master Thesis/Data_CRSP_Compustat/NASDAQ_data.xlsx"))

# Merge data
# Dette er kun nødvendig hvis du har et delt datasett, men for London og Japan er det vel ikke det? 
NYSE_AMEX = merge.data.table(NYSE,AMEX)
NYSE_AMEX = merge(NYSE, AMEX, all = TRUE)
data = merge.data.table(NYSE_AMEX,NASDAQ)
data = merge(NYSE_AMEX, NASDAQ, all = TRUE) # Dette er endelig datasett jeg jobber med gjennom resten av koden 

# Cleaning 
colnames(data) = c("PERMNO", "DATE", "SHRCD", "EXCHCD", "DLRET", "PRC", "RET", "SHROUT", "RF") # Her har jeg endret navn på variablene så det er omtrent konsistent med hans koder 
data$PRC = abs(data$PRC) # VI MÅ BLI ENIGE OM VI SKAL TA ABS ELLR IKKE!! Tenker vi bare kjører på med absolute prices jeg 

# Sort by TICKER 
# Dette vil jeg tro ikke er relevant for deg siden oppsettet er noe annet, men det kan vi også se nærmere på når du kommer hit 
setkey(data,TICKER,DATE)
vec=c('TICKER','DATE')
setorderv(data,vec)

# Replace NA returns with delisted returns 
# I datasettet fra CRSP så mangler selskapene returns den måneden de blir delisted (tatt av børs) 
# Men de har en delisted return, så jeg erstatter tomme celler med den delisted returnen 
# Du har nok kanskje ikke delistede returns, så du kan for eksempel heller endre til at den returnen er lik måneden før (for det er nok ikke mange tilfelller)  
index = which(!is.na(data$DLRET))
D_R = data$DLRET[index]
R = data$RET
R[R = index] <- D_R
data$RET = R 

# Replace NA prices calculated from delisted returns 
# Her er det samme som over, men her er det prisene vi må endre 
# Vi kan se nærmere på hvordan denne bør gjøres når du kommer så langt 
index = which(!is.na(data$DLRET))
P = data$PRC
P[P=index] <- P[index - 1]*(1 + data$RET[index])
data$PRC = P 

# NA prices and returns without delisiting returns - DELETING ROWS
# Her sletter vi alle de som fortsatt har tomme celler etter å ha erstattet med delisted returns, og fjerner bare fra datasettet 
index2 = which(is.na(data$RET))
data = data[-which(is.na(data$PRC))]
data = data[-which(is.na(data$RET))]

# FINDING MARKET CAP 
# Absolute price * shares outstanding 
data$MKTCAP = data[,MKTCAP:=abs(PRC)*SHROUT]

# Create lagged mkt cap of each stock at each date
# Lagger med en måned - kan hende det vil dukke opp problemer med at datasettet ditt ikke er sortert på samme måte, men det finner vi ut av 
data$MKTCAP_LAG = data[,MKTCAP_LAG:=shift(MKTCAP), by=TICKER]

# Det her har jeg ikke helt skjønt hvorfor vi gjør, men det er i forbindelse med NYSE sorteringen virker det som 
data[,Year:=year(DATE)]
data[,Month:=month(DATE)]
data[,key:=paste(Year,Month)]

# Remove NA in MKTCAP_LAG
data = data[,RET_NO_DIV:=NULL]
data = data[,DLRET:=NULL]
data = na.omit(data)

# Create variable for SMB ranking. We define lagged market cap as a ranking variable
data = data[, `:=`(decile_month, cut(MKTCAP_LAG, breaks = quantile(MKTCAP_LAG[which(EXCHCD==1)],probs = c(0,0.5,1), na.rm = TRUE), include.lowest = TRUE, labels = FALSE)),by = key]
data = data[, `:=`(decile_month_help, cut(MKTCAP_LAG, breaks = quantile(MKTCAP_LAG,probs = c(0,0.5,1), na.rm = TRUE), include.lowest = TRUE, labels = FALSE)),by = key]
data[,decile_month2:=ifelse(is.na(decile_month) & decile_month_help==1,1,ifelse(is.na(decile_month) & decile_month_help==2,2,decile_month))]

data = data[,decile_month:=NULL] 
data = data[,decile_month_help:=NULL] 

smb_deciles=copy(data)

# Aggregate the return of firms that have several PERMNOs 
# {r,eval=TRUE} - HVA ER DETTE OG HVA GJØRE DEN? 

# Aggreagate return of firm that has several securities traded
data[,TICKER_weight:=data$MKTCAP_LAG/sum(data$MKTCAP_LAG),by=.(TICKER,key)]
data[,RET:=sum(TICKER_weight*RET),by=.(TICKER,key)]
data[,MKTCAP_LAG:=sum(MKTCAP_LAG),by=.(TICKER,key)]
data=unique(data[,.(TICKER,DATE,EXCHCD,MKTCAP,MKTCAP_LAG,RET,key,Year,Month)],by=c("TICKER","key"))
setorder(data,TICKER,key) 

# Bruke denne? 
# data$TICKER_weight = data$MKTCAP_LAG/sum(data$MKTCAP_LAG)

# Linking 



